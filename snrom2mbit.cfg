#
# Linker script for SGROM/SNROM (2 Mbit)
# Copyright 2010 Damian Yerrick
#
# Copying and distribution of this file, with or without
# modification, are permitted in any medium without royalty
# provided the copyright notice and this notice are preserved.
# This file is offered as-is, without any warranty.
#
MEMORY {
  ZP:     start = $10, size = $f0, type = rw;
  # use first $10 zeropage locations as locals
  HEADER: start = 0, size = $0010, type = ro, file = %O, fill=yes, fillval=$00;
  RAM:    start = $0300, size = $0500, type = rw;
  ROM00:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=0;
  ROM01:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=1;
  ROM02:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=2;
  ROM03:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=3;
  ROM04:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=4;
  ROM05:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=5;
  ROM06:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=6;
  ROM07:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=7;
  ROM08:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=8;
  ROM09:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=9;
  ROM10:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=10;
  ROM11:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=11;
  ROM12:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=12;
  ROM13:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=13;
  ROM14:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=14;
  ROM15:  start = $C000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF, bank=15;
}

SEGMENTS {
  ZEROPAGE: load = ZP, type = zp;
  BSS:      load = RAM, type = bss, define = yes, align = $100;

  INESHDR:  load = HEADER, type = ro, align = $10;
  BANK00:   load = ROM00, type = ro, align = $100, optional = yes;
  BANK01:   load = ROM01, type = ro, align = $100, optional = yes;
  BANK02:   load = ROM02, type = ro, align = $100, optional = yes;
  BANK03:   load = ROM03, type = ro, align = $100, optional = yes;
  BANK04:   load = ROM04, type = ro, align = $100, optional = yes;
  BANK05:   load = ROM05, type = ro, align = $100, optional = yes;
  BANK06:   load = ROM06, type = ro, align = $100, optional = yes;
  BANK07:   load = ROM07, type = ro, align = $100, optional = yes;
  BANK08:   load = ROM08, type = ro, align = $100, optional = yes;
  BANK09:   load = ROM09, type = ro, align = $100, optional = yes;
  BANK10:   load = ROM10, type = ro, align = $100, optional = yes;
  BANK11:   load = ROM11, type = ro, align = $100, optional = yes;
  BANK12:   load = ROM12, type = ro, align = $100, optional = yes;
  BANK13:   load = ROM13, type = ro, align = $100, optional = yes;
  BANK14:   load = ROM14, type = ro, align = $100, optional = yes;
  DMC:      load = ROM15, type = ro, align = 64, optional = yes;
  CODE:     load = ROM15, type = ro, align = $100;
  RODATA:   load = ROM15, type = ro, align = $100;

  STUB00:   load = ROM00, type = ro, start = $BFF0;
  STUB01:   load = ROM01, type = ro, start = $BFF0;
  STUB02:   load = ROM02, type = ro, start = $BFF0;
  STUB03:   load = ROM03, type = ro, start = $BFF0;
  STUB04:   load = ROM04, type = ro, start = $BFF0;
  STUB05:   load = ROM05, type = ro, start = $BFF0;
  STUB06:   load = ROM06, type = ro, start = $BFF0;
  STUB07:   load = ROM07, type = ro, start = $BFF0;
  STUB08:   load = ROM08, type = ro, start = $BFF0;
  STUB09:   load = ROM09, type = ro, start = $BFF0;
  STUB10:   load = ROM10, type = ro, start = $BFF0;
  STUB11:   load = ROM11, type = ro, start = $BFF0;
  STUB12:   load = ROM12, type = ro, start = $BFF0;
  STUB13:   load = ROM13, type = ro, start = $BFF0;
  STUB14:   load = ROM14, type = ro, start = $BFF0;
  STUB15:   load = ROM15, type = ro, start = $FFF0;
}

FILES {
  %O: format = bin;
}

